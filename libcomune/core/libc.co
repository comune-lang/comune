// this module contains manual bindings to important libc functions.
// after basic C++ integration is implemented, this should become obsolete, as we can just import the C standard library directly on applicable platforms.

type CFileHandle = void raw*;

@no_mangle
fn malloc(usize size) -> void raw*;

@no_mangle
fn realloc(void raw* ptr, usize capacity) -> void raw*;

@no_mangle
fn free(void raw* ptr);

@no_mangle
fn memcpy(void mut* dest, void* src, usize count) -> void raw*;

@no_mangle
fn memset(void mut* str, int c, usize n) -> void raw*;

@no_mangle
fn printf(u8* fmt, ...) -> int;

@no_mangle
fn abort() -> never;

@no_mangle
unsafe fn fopen(u8* path, u8* mode) -> CFileHandle;

@no_mangle
unsafe fn fclose(CFileHandle handle);

@no_mangle
unsafe fn fread(void mut* out, usize size, usize nmemb, CFileHandle stream) -> usize;

@no_mangle
unsafe fn fwrite(void* in, usize size, usize nmemb, CFileHandle stream) -> usize;