// comune core library - traits module
//
// this module contains traits that are fundamental to the type system.

using core::option::Option;

@lang(Copy)
trait Copy {}

@lang(Move)
trait Move {}

@lang(Sized)
trait Sized {}

@lang(Send)
trait Send {}

@lang(Sync)
trait Sync {}

trait From<type T> {
	fn from(T t) -> Self;
}

trait Into<type T> {
	fn into(self) -> T;
}

/*
trait Iterator {
	type Output;

	fn next(mut& self) -> Option<Output>;
}

trait Unwrap {
	type Output;

	fn can_unwrap(&self) -> bool;
	fn unwrap(self) -> Output;
}*/
