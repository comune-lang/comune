import module_test;
using module_test::{fib, foo};

@no_mangle
void printf(char* fmt);

@no_mangle
void* malloc(usize size);

@no_mangle
void free(void* ptr);

@layout(packed)
struct Test {
	int a;
	int b;
}

impl Test {
	int sum(Test self) {
		printf("This is a method call!\n\0");
		return self.a + self.b;
	}
}

int main() {
	printf("This is main()!\n\0");
	
	Test test = Test { 
		a: 60, 
		b: 0
	};

	while (test.b < 9) {
		printf("This is a while loop!\n\0");
		test.b++;
	}

	for (int i = 0; i < 10; i++) {
		int test = 2;
		printf("For loop test!\n\0");
	}

	Test* heap = malloc(8) as Test*;
	*heap = test;

	int result = (*heap).sum();
	
	free(heap as void*);
	return result;
}
